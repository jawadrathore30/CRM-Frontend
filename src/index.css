@import url("https://fonts.googleapis.com/css2?family=Poppins:wght@400;700&display=swap");

@import "tailwindcss";
@plugin 'tailwindcss-animate';

@custom-variant dark (&:where(.dark, .dark *));

@layer base {
  :root {
    /* Light theme - Soft Blue */
    --background: 210 50% 98%; /* Light blue-tinted background */
    --foreground: 220 60% 20%;

    --card: 0 0% 100%;
    --card-foreground: 220 60% 20%;

    --popover: 0 0% 100%;
    --popover-foreground: 220 60% 20%;

    --primary: 220 70% 50%; /* Vibrant blue primary */
    --primary-foreground: 210 40% 98%;

    --secondary: 210 40% 96.1%;
    --secondary-foreground: 220 60% 20%;

    --muted: 210 40% 93%;
    --muted-foreground: 220 60% 40%;

    --accent: 210 40% 90%;
    --accent-foreground: 220 60% 20%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;

    --border: 214.3 31.8% 91.4%;
    --input: 214.3 31.8% 91.4%;
    --ring: 220 70% 50%;

    --radius: 0.75rem;

    /* Sidebar specific tokens */
    --sidebar-background: 0 0% 100%;
    --sidebar-foreground: 220 60% 20%;
    --sidebar-primary: 220 70% 50%;
    --sidebar-primary-foreground: 210 40% 98%;
    --sidebar-accent: 210 40% 96.1%;
    --sidebar-accent-foreground: 220 60% 20%;
    --sidebar-border: 214.3 31.8% 91.4%;
    --sidebar-ring: 220 70% 50%;
  }

  .dark {
    /* Dark theme - Modern Dark Blue */
    --background: 222 47% 11%; /* Deep navy blue background */
    --foreground: 210 40% 98%;

    --card: 223 47% 14%;
    --card-foreground: 210 40% 98%;

    --popover: 223 47% 14%;
    --popover-foreground: 210 40% 98%;

    --primary: 214 100% 60%; /* Vibrant blue primary */
    --primary-foreground: 210 40% 98%;

    --secondary: 222 47% 18%;
    --secondary-foreground: 210 40% 98%;

    --muted: 222 47% 18%;
    --muted-foreground: 215 20% 75%;

    --accent: 217 50% 25%;
    --accent-foreground: 210 40% 98%;

    --destructive: 0 62.8% 50.6%;
    --destructive-foreground: 210 40% 98%;

    --border: 222 47% 20%;
    --input: 222 47% 20%;
    --ring: 214 100% 60%;

    /* Sidebar tokens for dark mode */
    --sidebar-background: 223 47% 14%;
    --sidebar-foreground: 210 40% 98%;
    --sidebar-primary: 214 100% 60%;
    --sidebar-primary-foreground: 210 40% 98%;
    --sidebar-accent: 217 50% 25%;
    --sidebar-accent-foreground: 210 40% 98%;
    --sidebar-border: 222 47% 20%;
    --sidebar-ring: 214 100% 60%;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
    font-feature-settings: "rlig" 1, "calt" 1;
  }
}

/* Custom scrollbar */
::-webkit-scrollbar {
  width: 6px;
  height: 6px;
}

::-webkit-scrollbar-track {
  background: transparent;
}

::-webkit-scrollbar-thumb {
  background: hsl(var(--primary) / 0.2);
  border-radius: 100px;
}

::-webkit-scrollbar-thumb:hover {
  background: hsl(var(--primary) / 0.3);
}

/* Smooth transitions for all elements */
* {
  transition-property: background-color, border-color, color, fill, stroke;
  transition-duration: 200ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

/* Form focus effects */
input:focus,
textarea:focus,
select:focus {
  @apply ring-2 ring-primary/30 ring-offset-1 ring-offset-background;
  outline: none;
}

/* Button hover animations */
button {
  position: relative;
  overflow: hidden;
}

button::after {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  width: 5px;
  height: 5px;
  background: rgba(255, 255, 255, 0.4);
  opacity: 0;
  border-radius: 100%;
  transform: scale(1, 1) translate(-50%, -50%);
  transform-origin: 50% 50%;
}

button:focus:not(:active)::after {
  animation: ripple 0.6s ease-out;
}

@keyframes ripple {
  0% {
    transform: scale(0, 0);
    opacity: 0.5;
  }
  100% {
    transform: scale(20, 20);
    opacity: 0;
  }
}

/* Glass effect */
.glass {
  background: rgba(255, 255, 255, 0.05);
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.1);
}

.dark .glass {
  background: rgba(0, 0, 0, 0.2);
  border: 1px solid rgba(255, 255, 255, 0.05);
}

/* Gradient text */
.gradient-text {
  @apply bg-clip-text text-transparent bg-gradient-to-r from-primary to-primary/70;
}

/* Light mode specific patterns */
.light-pattern {
  background-color: hsl(var(--background));
  background-image: radial-gradient(hsla(var(--primary) / 0.03) 2px, transparent 0);
  background-size: 30px 30px;
}

/* Dark mode specific patterns */
.dark .dark-pattern {
  background-image: linear-gradient(to right, hsla(var(--primary) / 0.05) 1px, transparent 1px),
    linear-gradient(to bottom, hsla(var(--primary) / 0.05) 1px, transparent 1px);
  background-size: 40px 40px;
}

/* Card hover effects */
.card-hover {
  transition: transform 0.2s ease, box-shadow 0.2s ease;
}

.card-hover:hover {
  transform: translateY(-3px);
  box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1), 0 8px 10px -6px rgba(0, 0, 0, 0.05);
}

.dark .card-hover:hover {
  box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.3), 0 8px 10px -6px rgba(0, 0, 0, 0.2);
}

/* Blue glow effect for dark mode */
.dark .blue-glow {
  box-shadow: 0 0 15px 2px hsla(var(--primary) / 0.15);
}

.dark .blue-glow:hover {
  box-shadow: 0 0 20px 5px hsla(var(--primary) / 0.25);
}

/* Animations */
@keyframes accordion-down {
  from {
    height: 0;
  }
  to {
    height: var(--radix-accordion-content-height);
  }
}

@keyframes accordion-up {
  from {
    height: var(--radix-accordion-content-height);
  }
  to {
    height: 0;
  }
}

.accordion-down {
  animation: accordion-down 0.2s ease-out;
}
.accordion-up {
  animation: accordion-up 0.2s ease-out;
}

.fade-in {
  animation: fadeIn 0.5s ease-in-out;
}

.slide-up {
  animation: slideUp 0.5s ease-in-out;
}

.slide-in {
  animation: slideIn 0.5s ease-in-out;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes slideUp {
  from {
    transform: translateY(20px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes slideIn {
  from {
    transform: translateX(-20px);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

/* Container styles */
@layer base {
  .container {
    padding: 2rem;
    margin-left: auto;
    margin-right: auto;
  }
  @media (min-width: 1536px) {
    .container {
      max-width: 1400px;
    }
  }
}

/* Ethnocentric Font: Regular (400) */
@font-face {
  font-family: "Ethnocentric";
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: url("/fonts/ethnocentric-rg.woff2") format("woff2"), url("/fonts/ethnocentric-rg.woff") format("woff");
}

/* Ethnocentric Font: Bold (700) */
@font-face {
  font-family: "Ethnocentric";
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: url("/fonts/ethnocentric-bd.woff2") format("woff2"), url("/fonts/ethnocentric-bd.woff") format("woff");
}

/* Blue highlight for selected text */
::selection {
  background-color: hsla(var(--primary) / 0.2);
  color: hsl(var(--foreground));
}

/* Dark mode blue accents */
.dark .blue-accent {
  border-left: 3px solid hsl(var(--primary));
  padding-left: 1rem;
}

/* Blue gradient backgrounds */
.blue-gradient {
  background: linear-gradient(135deg, hsl(var(--primary)) 0%, hsl(var(--primary) / 0.7) 100%);
  color: hsl(var(--primary-foreground));
}

.dark .blue-gradient-subtle {
  background: linear-gradient(135deg, hsla(var(--primary) / 0.2) 0%, hsla(var(--primary) / 0.05) 100%);
}

/* /* -------------------------------------------------
   Define Theme Tokens with @theme (for colors & radius)
-------------------------------------------------- */
@theme {
	--color-border: hsl(var(--border));
	--color-input: hsl(var(--input));
	--color-ring: hsl(var(--ring));
	--color-background: hsl(var(--background));
	--color-foreground: hsl(var(--foreground));

	--color-primary: hsl(var(--primary));
	--color-primary-foreground: hsl(var(--primary-foreground));

	--color-secondary: hsl(var(--secondary));
	--color-secondary-foreground: hsl(var(--secondary-foreground));

	--color-destructive: hsl(var(--destructive));
	--color-destructive-foreground: hsl(var(--destructive-foreground));

	--color-muted: hsl(var(--muted));
	--color-muted-foreground: hsl(var(--muted-foreground));

	--color-accent: hsl(var(--accent));
	--color-accent-foreground: hsl(var(--accent-foreground));

	--color-popover: hsl(var(--popover));
	--color-popover-foreground: hsl(var(--popover-foreground));

	--color-card: hsl(var(--card));
	--color-card-foreground: hsl(var(--card-foreground));

	--radius-lg: var(--radius);
	--radius-md: calc(var(--radius) - 2px);
	--radius-sm: calc(var(--radius) - 4px);

	--font-poppins: "Poppins", sans-serif;
}

/* -------------------------------------------------
   Container Styles
   Tailwind’s container utility is configured in the config file.
   To mimic your container settings in CSS, we define a custom class.
-------------------------------------------------- */
@layer base {
	.container {
		padding: 2rem;
		margin-left: auto;
		margin-right: auto;
	}
	@media (min-width: 1536px) {
		/* 2xl breakpoint */
		.container {
			max-width: 1400px;
		}
	}
}

/* -------------------------------------------------
   Keyframes & Animations
   These need to be defined in your CSS since they aren’t automatically generated.
-------------------------------------------------- */
@keyframes accordion-down {
	from {
		height: 0;
	}
	to {
		height: var(--radix-accordion-content-height);
	}
}

@keyframes accordion-up {
	from {
		height: var(--radix-accordion-content-height);
	}
	to {
		height: 0;
	}
}

/* Optionally, create utility classes to trigger these animations */
.accordion-down {
	animation: accordion-down 0.2s ease-out;
}
.accordion-up {
	animation: accordion-up 0.2s ease-out;
}

/* Additional Animations */
.fade-in {
	animation: fadeIn 0.5s ease-in-out;
}

.slide-up {
	animation: slideUp 0.5s ease-in-out;
}

.slide-in {
	animation: slideIn 0.5s ease-in-out;
}

@keyframes fadeIn {
	from {
		opacity: 0;
	}
	to {
		opacity: 1;
	}
}

@keyframes slideUp {
	from {
		transform: translateY(20px);
		opacity: 0;
	}
	to {
		transform: translateY(0);
		opacity: 1;
	}
}

@keyframes slideIn {
	from {
		transform: translateX(-20px);
		opacity: 0;
	}
	to {
		transform: translateX(0);
		opacity: 1;
	}
}
